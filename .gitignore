"use client";
import React, { useEffect } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/Tabs";
import CreationContent from "./content/CreationContent";
import ValidationContent from "./content/ValidationsContent";
import { Documents } from "@/components/Documents";
import { useAuthStore } from "@/app/store/auth/authStore";
import { useDocumentStore } from "@/app/store/documentsStore/documentStore";
import { Document, HistoryData } from "@/app/store/types";
import RequestConfigProvider from "@/app/providers/getRequestProvider";
import { TabsNavigation } from "@/components/TabsNavigation";
import InstructionEmail from "@/components/InstructionEmail";
import { Approvals } from "@/components/Approvals";
import Requests from "@/components/Requests";
import History from "@/components/history/History";
// import historyMock  from  "@/app/mocks/historyMock.json";

// const historyData = historyMock as HistoryData;

type IPageTabsParams = {
  params: {
    requestName: string;
    requestId?: string;
  };
  tabTriggerType: string;
};

export default function PageTabs({ params, tabTriggerType }: IPageTabsParams) {

  const { getRequestConfig } = RequestConfigProvider(params.requestId);
  const { userData } = useAuthStore((state) => state);
  const { documentList, setDocumentList } = useDocumentStore((state) => state);
  const { isLoading, isFetching, data } = getRequestConfig;

  console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>', data)

  const validationStatus = data?.timeline
    ?.flat()
    ?.find((item: any) => item?.name?.includes("Validation"));

  useEffect(() => {
    setDocumentList([]);

    return () => {
      setDocumentList([]);
    };
  }, []);

  if (!data) {
    return;
  }

  return (
    <Tabs
      defaultValue={tabTriggerType}
      className="min-h-screen w-full py-7 px-6"
    >
      <TabsList>
        <TabsTrigger
          value="request"
          className="-mb-1 rounded-t-lg font-figtree flex h-[45px] cursor-pointer flex-row items-center justify-center bg-background-primary text-sm font-normal text-[#636574] aria-selected:!bg-white aria-selected:text-[#1e2347]"
        >
          {data.caseNumber ? (
            <>{`Request: ${data.caseNumber}`}</>
          ) : (
            "New Request"
          )}
        </TabsTrigger>
        <TabsTrigger
          value="documents"
          className="-mb-1 rounded-t-lg font-figtree flex h-[45px] cursor-pointer flex-row items-center justify-center bg-background-primary text-sm font-normal text-[#636574] aria-selected:!bg-white aria-selected:text-[#1e2347]"
        >
          Documents
        </TabsTrigger>
        <TabsTrigger
          value="history"
          className="-mb-1 rounded-t-lg font-figtree flex h-[45px] cursor-pointer flex-row items-center justify-center bg-background-primary text-sm font-normal text-[#636574] aria-selected:!bg-white aria-selected:text-[#1e2347]"
        >
          History
        </TabsTrigger>
      </TabsList>

      <TabsContent value="request">
        {validationStatus.status === "pending" ? (
          <Requests data={data} />
        ) : (
          <div className="w-full ">
            <TabsNavigation
              tabs={[
                {
                  label: "Creation",
                  content: <CreationContent data={data} />,
                },
                {
                  label: "Validations",
                  content: <ValidationContent />,
                } /*,
                // {
                //   label: "Acceptance",
                //   content: <AcceptanceContent />,
                // },
                // {
                //   label: "Callback",
                //   content: <CallbackContent />,
                // },*/,
              ]}
              initialTab={0}
            />
          </div>
        )}
      </TabsContent>

      <TabsContent
        value="documents"
        className="mt-0 rounded-b-lg rounded-r-lg bg-[white] aria-selected:block rounded-lg p-6"
      >
        {
          <Documents
            baseUrl={process.env.NEXT_PUBLIC_BASE_URL ?? ""}
            bucketName="conductor-client"
            pathUrl="/v1/file"
            getListDocument={documentList ?? []}
            showUploader={true}
            userData={userData}
            onUploadDocuments={(documents: Document[]) =>
              setDocumentList(documents)
            }
          />
        }
      </TabsContent>
      <TabsContent
        value="history"
        className="mt-0 rounded-b-lg rounded-r-lg bg-[white] aria-selected:block rounded-lg p-6"
      >
          <History
          status={data.caseStatus}
          data={data.timeline}
          cardRowData={data.workflow}
          dataDisplayData={data.actions}
          selectedBank={data?.beneficiaryBankName?.content || ""}
        />
      </TabsContent>

      <TabsContent value="history">{<p>History</p>}</TabsContent>
    </Tabs>
  );
}


=======================================


"use client";

import React, {
  Fragment,
  JSXElementConstructor,
  Key,
  ReactElement,
  ReactNode,
} from "react";
import CardsRow from "./CardsRow/cardsRow";
import DataDisplay from "./DataDisplay/dataDisplay";
import Status from "./Status/status";
import TableStep from "./TableStep/tableStep";
import Timeline from "./Timeline/timeline";
import { formatDateTime } from "@/app/utils/formatDateTime";

export type workflowStatus =
  | "completed"
  | "canceled"
  | "waiting"
  | "pending"
  | "skipped";

export type IHistory = {
  status: string;
  data: any[][];
  timeLine?: { name: string; status: workflowStatus }[];
  cardRowData?: any[] | [];
  dataDisplayData?: any[];
  selectedBank?: string;
};

export default function History({
  data,
  timeLine,
  cardRowData,
  dataDisplayData,
  selectedBank,
}: IHistory) {
  const timeLineMap = timeLine ?? [];

  const statusFieldMap: Record<string, string> = {
    cancel: "rejected",
    canceled: "-",
    completed: "approved",
    pending: "-",
    reject: "rejected",
    return: "partial",
    success: "approved",
    waiting: "-",
  };
  const statusLabelMap: Record<string, string> = {
    cancel: "Canceled",
    canceled: "-",
    completed: "Completed",
    pending: "-",
    return: "Requested change",
    waiting: "-",
  };

  interface IPeople {
    userId: Key | null | undefined;
    firstName:
      | string
      | number
      | bigint
      | boolean
      | ReactElement<any, string | JSXElementConstructor<any>>
      | Iterable<ReactNode>
      | null
      | undefined;
    lastName:
      | string
      | number
      | bigint
      | boolean
      | ReactElement<any, string | JSXElementConstructor<any>>
      | Iterable<ReactNode>
      | null
      | undefined;
    addedAt?: string;
    addedBy?: string;
    approvalsLevel?: string;
    permissionLevel?: string;
    indexLevel?: number;
    action?: {
      signature: string;
      subtype: ReactNode;
      type: string;
      date: string;
      comment: any;
    }[];
    signature?: string;
    date?: string;
    type?: string;
    comment?: any;
  }

  return (
    <div className="p-6">
      {cardRowData && (
        <div className="flex flex-col gap-4 mb-6">
          <CardsRow title="Approvals" data={cardRowData} />
        </div>
      )}

      <div className="flex flex-col gap-4">
        <div className="text-[#484A55] font-figtree text-base font-semibold leading-[24px] tracking-[0.12px] text-left">
          Timeline
        </div>
        <Timeline.Root>
          {data
            .flatMap((subArray, subArrayIndex) =>
              subArray.map((item, itemIndex) => ({
                ...item,
                isFromMultiple: subArray.length > 1,
                subArrayIndex,
                key: `${subArrayIndex}-${itemIndex}`,
                originalStatus: item.status as workflowStatus,
              }))
            )
            .map((item: any, idx, flat) => {
              const isLast = idx === flat.length - 1;
              const next = flat[idx + 1];
              const statusValue = timeLine
                ? timeLineMap[idx].status
                : item.originalStatus;
              const hasExtra =
                !isLast &&
                item.isFromMultiple &&
                next?.isFromMultiple &&
                item.subArrayIndex === next.subArrayIndex;

              return (
                <Fragment key={item.key}>
                  <Timeline.Step progress={!isLast} status={statusValue}>
                    <div className="relative flex flex-col items-center">
                      {hasExtra && (
                        <span className="absolute top-[-24px] left-1/2 transform -translate-x-1/2">
                          <Timeline.Link
                            status={next?.originalStatus}
                            hoverContent={
                              <div className="text-xs">
                                <div>
                                  <strong>Name:</strong> {item.name}
                                </div>
                                <div>
                                  <strong>Status:</strong> {item.originalStatus}
                                </div>
                                <div>
                                  <strong>Group:</strong> {item.subArrayIndex}
                                </div>
                              </div>
                            }
                          />
                        </span>
                      )}
                      <Timeline.Circle status={statusValue} />
                      <Timeline.Text>{item.name}</Timeline.Text>
                    </div>
                  </Timeline.Step>
                </Fragment>
              );
            })}
        </Timeline.Root>
      </div>

      <div className="mt-10">
        <TableStep.Root>
          {data.map((group, groupIdx) =>
            group.map((item: any, itemIdx: number) => {
              const statusValue = timeLine
                ? timeLineMap[groupIdx].status
                : (item.status as workflowStatus);

              return (
                <Fragment key={`${item.status}-${groupIdx}-${itemIdx}`}>
                  <TableStep.Title status={statusValue}>
                    {item.approvalsLevel ? (
                      <div className="flex gap-1">
                        <div className="font-normal">
                          {groupIdx + 1}.{item.indexLevel}. {item.name}:
                        </div>
                        <div className="font-semibold">
                          {item.approvalsLevel}
                        </div>
                        <br />
                      </div>
                    ) : (
                      `${groupIdx + 1}. ${item.name}`
                    )}
                    <div className="text-[#636574]">
                      {item.permissionLevel ? ` • ${item.permissionLevel}` : ""}
                    </div>
                  </TableStep.Title>

                  <TableStep.Columns>
                    <TableStep.Line>Participant</TableStep.Line>
                    <TableStep.Line>Signature</TableStep.Line>
                    <TableStep.Line>Completed</TableStep.Line>
                    <TableStep.Line>Status</TableStep.Line>
                    <TableStep.Line>Result</TableStep.Line>
                    <TableStep.Line>Comments</TableStep.Line>
                  </TableStep.Columns>

                  {item.permissions?.people?.map(
                    (people: IPeople, idx: number, arr: IPeople[]) => {
                      const isPendingOrCompleted =
                        item.status === "completed" ||
                        item.status === "pending";

                      return (
                        <Fragment key={`${people.userId}-${idx}`}>
                          <TableStep.Body>
                            <TableStep.Item>
                              <div className="flex items-center text-[#636574]">
                                {people.firstName} {people.lastName}
                                {people.addedAt && people.addedBy && (
                                  <div className="text-sm leading-[21px] font-normal text-[#636574]">
                                    {" "}
                                    - Added by {people.addedBy}
                                  </div>
                                )}
                              </div>
                            </TableStep.Item>

                            <TableStep.Item>
                              {people.action ? people.action[0].signature : "-"}
                            </TableStep.Item>

                            <TableStep.Item>
                              {people.action
                                ? formatDateTime(people.action[0].date)
                                : "-"}
                            </TableStep.Item>

                            <TableStep.Item>
                              {isPendingOrCompleted ? (
                                item.status === "pending" ? (
                                  "Active"
                                ) : (
                                  <Status
                                    width={164}
                                    type={statusFieldMap[item.status] as any}
                                  >
                                    {statusLabelMap[item.status] as string}
                                  </Status>
                                )
                              ) : (
                                "-"
                              )}
                            </TableStep.Item>

                            <TableStep.Item>
                              {people.action ? (
                                <Status
                                  width={164}
                                  type={
                                    statusFieldMap[people.action[0].type] as any
                                  }
                                >
                                  {people.action[0].type === "success"
                                    ? item.successLabel
                                    : people.action[0].subtype}
                                </Status>
                              ) : (
                                "-"
                              )}
                            </TableStep.Item>

                            <TableStep.Item>
                              {people.action && people.action[0].comment
                                ? people.action[0].comment
                                : "-"}
                            </TableStep.Item>
                          </TableStep.Body>

                          {idx !== arr.length - 1 && (
                            <div className="border-b border-[#EBEBEB] mx-10" />
                          )}
                        </Fragment>
                      );
                    }
                  )}
                </Fragment>
              );
            })
          )}
        </TableStep.Root>
      </div>

      {dataDisplayData && dataDisplayData.length > 0 && (
        <div className="mt-6">
          <DataDisplay
            title={`Process Integration: ${selectedBank}`}
            data={dataDisplayData}
          />
        </div>
      )}
    </div>
  );
}


=======================================================

export interface HistoryData {
  status: string;
  data: Array<
    Array<{
      id: number;
      name: string;
      status: "completed" | "pending" | "waiting" | "canceled" | "skipped";
      successLabel?: string;
      permissions: {
        people: Array<{
          userId: string;
          firstName: string;
          lastName: string;
          action?: Array<{
            type: string;
            subtype: string;
            date: string;
            comment: string;
          }>;
        }>;
      };
    }>
  >;
  cardRowData: Array<{
    title: string;
    value: string;
    level: string;
    date?: string;
  }>;
  dataDisplayData: Array<{
    Id: string;
    Status: string;
    Date: string;
  }>;
  selectedBank: string;
}

======================================================================

{
    "requestId": "7ba51df4-20ba-4b64-b0fc-c924d2c4954f",
    "caseId": "e36c2a43-b0ff-4bac-ac88-46842e0c8846",
    "transferType": {
        "content": "usd-domestic",
        "required": true
    },
    "initiator": {
        "content": "Flavio Hojda",
        "required": true
    },
    "cifAccountNumber": {
        "content": "NAA0001",
        "required": true
    },
    "accountNumber": {
        "content": "17223135-0",
        "required": true
    },
    "amountUSD": {
        "content": "123",
        "required": true
    },
    "levelUrgency": {
        "content": "normal",
        "required": false
    },
    "originSource": {
        "content": "email",
        "required": true
    },
    "insufficientFunds": {
        "content": "yes",
        "required": true
    },
    "insufficientFundsComment": {
        "content": "",
        "required": false
    },
    "notificationContactAttempt": {
        "content": true,
        "required": false
    },
    "notificationProcesedPayPlus": {
        "content": true,
        "required": false
    },
    "notificationAdditionalUsers": {
        "content": false,
        "required": false
    },
    "notificationUsers": {
        "content": [],
        "required": false
    },
    "forceCallbackBestNumberCall": {
        "content": "",
        "required": false
    },
    "forceCallbackTemporaryPhoneNumber": {
        "content": "",
        "required": false
    },
    "emailAddress": {
        "content": [],
        "required": false
    },
    "temporaryEmail": {
        "content": "",
        "required": false
    },
    "reasonTransaction": {
        "content": "sameBeneficialOwner",
        "required": true
    },
    "pleaseSpecify": {
        "content": "",
        "required": false
    },
    "bankCountry": {
        "content": "",
        "required": false
    },
    "beneficiaryCountry": {
        "content": "",
        "required": false
    },
    "relationshipBeneficiary": {
        "content": "Self",
        "required": true
    },
    "swiftBicBeneficiary": {
        "content": "",
        "required": false
    },
    "selectedBeneficiary": {
        "content": "",
        "required": false
    },
    "templateName": {
        "content": "",
        "required": false
    },
    "beneficiaryAccountNumber": {
        "content": "",
        "required": false
    },
    "beneficiaryBankCity": {
        "content": "",
        "required": false
    },
    "beneficiaryBankName": {
        "content": "",
        "required": false
    },
    "beneficiaryName": {
        "content": "",
        "required": false
    },
    "addressLine1": {
        "content": "",
        "required": false
    },
    "addressLine2": {
        "content": "",
        "required": false
    },
    "beneficiaryCity": {
        "content": "",
        "required": false
    },
    "beneficiaryState": {
        "content": "",
        "required": false
    },
    "beneficiaryZipCode": {
        "content": "",
        "required": false
    },
    "beneficiaryOBIFFC1": {
        "content": "",
        "required": false
    },
    "beneficiaryOBIFFC2": {
        "content": "",
        "required": false
    },
    "beneficiaryOBIFFC3": {
        "content": "",
        "required": false
    },
    "beneficiaryOBIFFC4": {
        "content": "",
        "required": false
    },
    "workflow": [
        [
            {
                "id": 1,
                "name": "Initiator",
                "creator": true,
                "status": "completed",
                "showHistory": true,
                "successLabel": "Submitted",
                "isClarification": false,
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Change requested",
                        "templateName": "wire-return-dep-approval.hbs"
                    },
                    "onApprovedRequest": null,
                    "OnCompletedRequest": null,
                    "OnClarificationRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - More information Requested",
                        "templateName": "wire-return-dep-verification.hbs"
                    }
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "FlavioH",
                            "firstName": "Flavio",
                            "lastName": "Hojda",
                            "email": "Flavio.Hojda@safra.com",
                            "action": [
                                {
                                    "firstName": "Flavio",
                                    "lastName": "Hojda",
                                    "type": "success",
                                    "subtype": "",
                                    "date": "06/12/2025 11:04:50",
                                    "comment": ""
                                }
                            ]
                        }
                    ]
                },
                "implementation": null,
                "completedAt": "2025-06-12T11:04:50.8268059-04:00"
            }
        ],
        [
            {
                "id": 2,
                "name": "Validation",
                "status": "pending",
                "showHistory": true,
                "successLabel": "Submitted",
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Change requested",
                        "templateName": "wire-return-dep-approval.hbs"
                    },
                    "onApprovedRequest": null,
                    "OnCompletedRequest": null,
                    "OnClarificationRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - More information Requested",
                        "templateName": "wire-return-dep-verification.hbs"
                    }
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "Flavio Hojda"
                        }
                    ]
                },
                "implementation": null
            }
        ],
        [
            {
                "id": 3,
                "name": "Validate Workflow",
                "type": "notification",
                "status": "waiting",
                "visible": false,
                "successLabel": "Notified",
                "stepType": "netFlixWorkFlow",
                "subWorkflowName": "WIRECLIENT_Setup_Workflow",
                "subWorkflowInputs": {
                    "requestId": "7ba51df4-20ba-4b64-b0fc-c924d2c4954f",
                    "caseId": "e36c2a43-b0ff-4bac-ac88-46842e0c8846",
                    "caseNumber": "WIRE063"
                },
                "showApprovals": false,
                "skipValidation": true,
                "workflowSelection": {},
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [],
                    "people": []
                },
                "implementation": null
            }
        ],
        [
            {
                "id": 31,
                "name": "Approvals and Restrictions: Acceptance",
                "status": "waiting",
                "requiredApprovals": "SignatureLevel",
                "showHistory": true,
                "showAll": true,
                "visible": false,
                "depend": "always",
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [],
                    "people": []
                },
                "implementation": null
            },
            {
                "id": 32,
                "name": "Approvals and Restrictions: Callback",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [],
                    "people": []
                }
            },
            {
                "id": 33,
                "name": "Approvals and Restrictions: Accounting",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        "Accounting"
                    ],
                    "people": []
                }
            },
            {
                "id": 34,
                "name": "Approvals and Restrictions: Compliance",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        "Compliance"
                    ],
                    "people": []
                }
            },
            {
                "id": 35,
                "name": "Approvals and Restrictions: Compliance BSA",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        "Compliance BSA"
                    ],
                    "people": []
                }
            },
            {
                "id": 36,
                "name": "Approvals and Restrictions: Account Officer Approval",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        ""
                    ],
                    "people": []
                }
            },
            {
                "id": 37,
                "name": "Approvals and Restrictions: Credit",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        ""
                    ],
                    "people": []
                }
            },
            {
                "id": 38,
                "name": "Approvals and Restrictions: Branch",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        ""
                    ],
                    "people": []
                }
            },
            {
                "id": 39,
                "name": "Approvals and Restrictions: Fraud",
                "status": "waiting",
                "requiredApprovals": 2,
                "showHistory": true,
                "successLabel": "Approved",
                "nextStepButton": "approve",
                "setResult": true,
                "visible": false,
                "depend": "mandatory-callback",
                "autoApproveSameUser": false,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "wire-manager-approval.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "groups": [
                        ""
                    ],
                    "people": []
                }
            }
        ],
        [
            {
                "id": 4,
                "name": "Restriction Removal",
                "status": "waiting",
                "showHistory": true,
                "successLabel": "Submitted",
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Change requested",
                        "templateName": "wire-return-dep-approval.hbs"
                    },
                    "onApprovedRequest": null,
                    "OnCompletedRequest": null,
                    "OnClarificationRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - More information Requested",
                        "templateName": "wire-return-dep-verification.hbs"
                    }
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "Flavio Hojda"
                        }
                    ]
                },
                "implementation": null
            }
        ],
        [
            {
                "id": 5,
                "name": "Wire Repair",
                "status": "waiting",
                "showHistory": true,
                "successLabel": "Submitted",
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Change requested",
                        "templateName": "wire-return-dep-approval.hbs"
                    },
                    "onApprovedRequest": null,
                    "OnCompletedRequest": null,
                    "OnClarificationRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - More information Requested",
                        "templateName": "wire-return-dep-verification.hbs"
                    }
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "Flavio Hojda"
                        }
                    ]
                },
                "implementation": null
            }
        ],
        [
            {
                "id": 6,
                "name": "OFAC",
                "status": "waiting",
                "successLabel": "Issued",
                "nextStepButton": "issued",
                "stepType": "netFlixWorkFlow",
                "subWorkflowName": "WIRE_OFAC_Scan",
                "subWorkflowInputs": {
                    "requestId": "7ba51df4-20ba-4b64-b0fc-c924d2c4954f",
                    "caseId": "e36c2a43-b0ff-4bac-ac88-46842e0c8846",
                    "etlName": "ofac",
                    "caseNumber": "WIRE063"
                },
                "setResult": true,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request $CASENUMBER$ - $REQUESTTYPE$ - Pending your approval",
                        "templateName": "tr_pending_to_process.hbs"
                    },
                    "onReturnPending": {
                        "subject": "Request $CASENUMBER$ - $REQUESTTYPE$ - Rescheculing Request",
                        "templateName": "tr_rescheduling_approve.hbs"
                    },
                    "onApprovedRequest": null,
                    "OnCanceledRequest": {
                        "subject": "Request $CASENUMBER$ - $REQUESTTYPE$ - Canceled",
                        "templateName": "tr_completed_canceled.hbs"
                    },
                    "OnRejectRequest": null
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "ofac",
                            "firstName": "OFAC",
                            "lastName": "Check",
                            "email": "ofac"
                        }
                    ]
                },
                "idStepReturn": 1
            }
        ],
        [
            {
                "id": 7,
                "name": "Processing",
                "status": "waiting",
                "successLabel": "Submitted",
                "stepType": "manualNetflix",
                "nextStepButton": "approved",
                "setResult": true,
                "subWorkflowName": "WIRE_Payplus",
                "subWorkflowInputs": {
                    "requestId": "7ba51df4-20ba-4b64-b0fc-c924d2c4954f",
                    "caseId": "e36c2a43-b0ff-4bac-ac88-46842e0c8846",
                    "caseNumber": "WIRE063"
                },
                "templateNotify": {
                    "onFirstPending": null,
                    "onReturnPending": null,
                    "onApprovedRequest": null,
                    "OnCanceledRequest": null,
                    "OnRejectRequest": null
                },
                "permissions": {
                    "canReturn": false,
                    "canCancel": true,
                    "canEdit": false,
                    "canComment": false,
                    "canSave": false,
                    "canSubmit": false,
                    "canHavePeopleAdded": false,
                    "canContingency": true,
                    "groups": [
                        "Wire Transfer"
                    ],
                    "people": []
                },
                "implementation": null
            }
        ],
        [
            {
                "id": 8,
                "name": "Initiator Notified",
                "type": "notification",
                "status": "waiting",
                "successLabel": "Notified",
                "stepType": "netFlixWorkFlow",
                "subWorkflowName": "WIRECLIENT_Initiator_Notified",
                "nextStepButton": "approved",
                "subWorkflowInputs": {
                    "requestId": "7ba51df4-20ba-4b64-b0fc-c924d2c4954f",
                    "caseId": "e36c2a43-b0ff-4bac-ac88-46842e0c8846",
                    "caseNumber": "WIRE063"
                },
                "showApprovals": false,
                "skipValidation": true,
                "templateNotify": {
                    "onFirstPending": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Approved",
                        "templateName": "wire-approved-request.hbs"
                    },
                    "onReturnPending": null,
                    "onApprovedRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Approved",
                        "templateName": "wire-approved-request.hbs"
                    },
                    "OnCanceledRequest": {
                        "subject": "Request DEPTWT$CASENUMBER$ - $REQUESTTYPE$ - Canceled",
                        "templateName": "wire-canceled-request.hbs"
                    },
                    "OnClarificationRequest": null
                },
                "permissions": {
                    "people": [
                        {
                            "userId": "Flavio Hojda"
                        }
                    ]
                },
                "implementation": null
            }
        ]
    ],
    "externalLoads": null,
    "caseStatus": "pending",
    "createdBy": "FlavioH",
    "caseNumber": "WIRE063",
    "createdAt": "2025-06-12T11:04:48.873",
    "frontEntries": null,
    "backEntries": null,
    "documents": [],
    "actions": [
        {
            "stepName": "Initiator",
            "type": "success",
            "subtype": "submit",
            "userId": "FlavioH",
            "date": "06/12/2025 11:04:50",
            "firstName": "Flavio",
            "lastName": "Hojda",
            "comment": ""
        }
    ],
    "timeline": [
        [
            {
                "name": "Initiator",
                "status": "completed"
            }
        ],
        [
            {
                "name": "Validation",
                "status": "pending"
            }
        ],
        [
            {
                "name": "Validate Workflow",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "Approvals and Restrictions: Acceptance",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Callback",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Accounting",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Compliance",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Compliance BSA",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Account Officer Approval",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Credit",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Branch",
                "status": "waiting"
            },
            {
                "name": "Approvals and Restrictions: Fraud",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "Restriction Removal",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "Wire Repair",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "OFAC",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "Processing",
                "status": "waiting"
            }
        ],
        [
            {
                "name": "Initiator Notified",
                "status": "waiting"
            }
        ]
    ],
    "messages": [],
    "workflowApprovers": [
        {
            "title": "Request Status",
            "value": "pending",
            "level": ""
        },
        {
            "title": "Approvals and Restrictions: Acceptance 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Acceptance 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Callback 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Callback 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Accounting 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Accounting 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Compliance 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Compliance 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Compliance BSA 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Compliance BSA 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Account Officer Approval 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Account Officer Approval 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Credit 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Credit 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Branch 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Branch 2",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Fraud 1",
            "value": "Pending",
            "level": "",
            "date": ""
        },
        {
            "title": "Approvals and Restrictions: Fraud 2",
            "value": "Pending",
            "level": "",
            "date": ""
        }
    ]
}

===================================================

{ 
  "status": "pending",
  "data": [
    [
      {
        "id": 1,
        "name": "Initiator",
        "status": "completed",
        "successLabel": "Submitted",
        "approvalsLevel": "Compliance",
        "permissionLevel": "PB AA",
        "indexLevel": 1,
        "permissions": {
          "people": [
            {
              "userId": "user1",
              "firstName": "João",
              "lastName": "Silva",
              "addedAt": "2023-10-01T12:00:00Z",
              "addedBy": "Carter Goose",
              "action": [
                {
                  "signature": "PB AA",
                  "type": "success",
                  "subtype": "approved",
                  "date": "2023-10-01T09:00:00Z",
                  "comment": "Transferência iniciada"
                }
              ]
            }
          ]
        }
      }
    ],
    [
      {
        "id": 2,
        "name": "Validations",
        "status": "skipped",
        "successLabel": "Validated",
        "permissions": {
          "people": [
            {
              "userId": "user2",
              "firstName": "Maria",
              "lastName": "Santos",
              "addedAt": "2023-10-01T12:00:00Z",
              "addedBy": "Carter Goose",
                  "action": [
                {
                  "signature": "PB AA",
                  "type": "success",
                  "subtype": "approved",
                  "date": "2023-10-01T10:30:00Z",
                  "comment": "Validações concluídas"
                }
              ]
            }
          ]
        }
      }
    ],
    [
      {
        "id": 3,
        "name": "Approvals and Restrictions",
        "status": "pending",
        "successLabel": "Approved",
        "permissions": {
          "people": [
            {
              "userId": "user3",
              "firstName": "Carlos",
              "lastName": "Oliveira",
              "addedAt": "2023-10-01T12:00:00Z",
              "addedBy": "Carter Goose",
              "action": [
                {
                  "signature": "-",
                  "type": "success",
                  "subtype": "approved",
                  "date": "2023-10-01T10:30:00Z",
                  "comment": "Validações concluídas"
                }
              ]
            },
            {
              "userId": "user4",
              "firstName": "Ana",
              "lastName": "Costa",
              "addedAt": "2023-10-01T12:00:00Z",
              "addedBy": "John Doe",
              "action": [
                {
                  "signature": "-",
                  "type": "success",
                  "subtype": "approved",
                  "date": "2023-10-01T10:30:00Z",
                  "comment": "Validações concluídas"
                }
              ]
            }
          ]
        }
      },
      {
        "id": 4,
        "name": "Restriction Removal",
        "status": "canceled",
        "successLabel": "Restrictions Removed",
        "permissions": {
          "people": []
        }
      }
    ],
    [
      {
        "id": 5,
        "name": "Wire Repair",
        "status": "waiting",
        "successLabel": "Repaired",
        "permissions": {
          "people": []
        }
      }
    ],
    [
      {
        "id": 6,
        "name": "OFAC",
        "status": "waiting",
        "successLabel": "Cleared",
        "permissions": {
          "people": []
        }
      }
    ],
    [
      {
        "id": 7,
        "name": "Processing",
        "status": "waiting",
        "successLabel": "Processed",
        "permissions": {
          "people": []
        }
      }
    ],
    [
      {
        "id": 8,
        "name": "Initiator Notified",
        "status": "waiting",
        "successLabel": "Notified",
        "permissions": {
          "people": []
        }
      }
    ]
  ],
  "cardRowData": [
    {
      "title": "Request Status",
      "value": "In Progress",
      "level": ""
    },
    {
      "title": "Initiator",
      "value": "Completed",
      "level": "",
      "date": "01/10/2023 09:00"
    },
    {
      "title": "Validations",
      "value": "Completed",
      "level": "",
      "date": "01/10/2023 10:30"
    },
    {
      "title": "Approvals and Restrictions",
      "value": "Pending (2/5)",
      "level": "",
      "date": ""
    },
    {
      "title": "Restriction Removal",
      "value": "Waiting",
      "level": "",
      "date": ""
    },
    {
      "title": "Wire Repair",
      "value": "Waiting",
      "level": "",
      "date": ""
    },
    {
      "title": "OFAC",
      "value": "Waiting",
      "level": "",
      "date": ""
    },
    {
      "title": "Processing",
      "value": "Waiting",
      "level": "",
      "date": ""
    },
    {
      "title": "Initiator Notified",
      "value": "Waiting",
      "level": "",
      "date": ""
    }
  ],
  "dataDisplayData": [
    {
      "Id": "WT-2023-001",
      "Status": "In Progress",
      "Date": "2023-10-01T09:00:00.000Z"
    }
  ],
  "selectedBank": "Bank of America"
}
