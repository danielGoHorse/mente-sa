import React, { useState } from 'react';
import Search from '@/components/Search';

interface ClientInfo {
  accountName: string;
  authorizedEmails: string[];
  kycComments: string;
  accountOfficer: string;
}


const mockClientData: ClientInfo = {
  accountName: 'JOHN SMITH ENGINEERING INDUSTRIES S a.r.l.',
  authorizedEmails: [
    'email1@mail.com',
    'email2@mail.com',
    'email3@mail.com',
    'kim.marry@email.com',
    'iasd@email.com',
  ],
  kycComments:
    '04/10/24 - Ok to add mobile phone number as per Mary B email from 1/24/24 at 9:40 AM',
  accountOfficer: 'John Stuart - BR13',
};

const ClientSearch: React.FC = () => {
  const [clientInfo, setClientInfo] = useState<ClientInfo | null>(null);
  const [initiator] = useState('Taya Mullins');

  const handleSearchSelect = () => {
    setClientInfo(mockClientData);
  };

  return (
    <div className="h-auto w-full bg-white p-0 rounded-b-md">
      <p>Client Information</p>
     <div className="max-w-lg mx-auto mt-8 bg-white rounded-md shadow">
      <div className="grid grid-cols-2 gap-4 p-6">
        <div className="">
          <label className="block font-figtree font-normal text-[14px] leading-[21px] tracking-[0.12px] text-gray-700">Initiator *</label>
          <input
            type="text"
            value={initiator}
            readOnly
            className="   w-full
                          h-[36px]
                          rounded-[4px]
                          border border-gray-300
                          bg-[#F7F7F8]
                          px-[12px] py-[6px]
                          text-sm
                          font-normal
                          text-gray-700
                          leading-[21px]
                          tracking-[0.12px]
                          focus:outline-none
                          focus:ring-2 focus:ring-blue-300"
          />
        </div>
        <div>
          <label className="block font-figtree font-normal text-[14px] leading-[21px] tracking-[0.12px] text-gray-700">
            CIF or Account Number *
          </label>
          <Search
            placeholder="Search Account Number"
            suggestions={["ABC1234"]}
            onSelect={handleSearchSelect}
          />
        </div>
      </div>

      {clientInfo && (
        <div className="border border-gray-200 rounded-b-md bg-gray-50 p-6">
          <p className="mb-2 font-semibold">
            Account Name: {clientInfo.accountName}
          </p>
          <p className="mb-2 font-semibold">Authorized Email(s):</p>
          <div className="flex flex-wrap gap-2">
            {clientInfo.authorizedEmails.map((email, index) => (
              <span
                key={index}
                className="bg-gray-200 rounded-full px-3 py-1 text-sm"
              >
                {email}
              </span>
            ))}
          </div>
          <p className="mt-3 font-semibold">KYC Comments:</p>
          <p className="text-sm text-gray-600">{clientInfo.kycComments}</p>
          <p className="mt-3 text-sm">
            <span className="font-semibold">Account Officer:</span> {clientInfo.accountOfficer}
          </p>
        </div>
      )}
    </div>
   </div>
  );
};

export default ClientSearch;
