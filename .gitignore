async #getExceptionFeesFromSQL(feePackageId) {
  const connection = await connectToFeeMgmtDb();
  const data = await executeStoreProcedure(
    connection,
    'sp_get_exception_fees_bypackage',
    { feePackageId }
  );

  return data.map((exception) => ({
    // Precisamos armazenar a FeeType se o SP retornar (nome exato da coluna).
    // É ela que vamos usar pra agrupar as exceções depois
    feeType: exception.FeeType, 
    code: deParaFeeCodes[exception.FeeCode] || exception.FeeCode,
    name: exception.FeeDescription,
    defaultValue: exception.Amount?.toString() || '0',
    tooltip: exception.FreqDescription || '',
    isException: true,

    // Precisamos também do FeeParameterOptionId para a exceptionOptions
    parameterOptionId: exception.FeeParameterOptionId,
  }));
}
