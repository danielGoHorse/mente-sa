import { configureSchemaMongoToReturnId } from '#src/core/data/mongoSchemaBase.js'
import mongoose, { Schema } from 'mongoose'

export const FieldSchema = new Schema(
  {
    code: {
      type: Number,
      required: true,
      enum: [1, 2, 3, 4, 5, 6, 7]
    },
    isStandard: {
      type: Boolean,
      required: true,
      default: false
    },
    isCurrentClient: {
      type: Boolean,
      required: true,
      default: false
    },
    isException: {
      type: Boolean,
      required: true,
      default: false
    },
    name: {
      type: String,
      required: true
    },
    defaultValue: {
      type: String,
      required: false
    },
    labelValue: {
      type: String,
      required: false
    },
    hasChanged: {
      type: Boolean,
      default: false
    },
    approved: {
      type: Boolean,
      required: false
    },
    reject: {
      type: Boolean,
      required: false
    },
    rejectComment: {
      type: String,
      required: false
    },
    tooltip: {
      type: String,
      required: false
    },
    exceptionOptions: [
      {
        value: String,
        text: String,

        retired: {
          type: Boolean,
          required: false,
          default: false
        },
        visible: {
          type: Boolean,
          required: false,
          default: true
        },
        approvedByDoubleA: {
          type: Boolean,
          required: false,
          default: null
        }
      }
    ],
    results: {
      type: Map,
      of: String,
      required: false
    }
  },
  {
    collection: 'Field',
    timestamps: true
  }
)
configureSchemaMongoToReturnId('toObject', FieldSchema)

export const Field = mongoose.model('Fields', FieldSchema)




export const configureSchemaMongoToReturnId = (
  typeConvert,
  SchemaModel,
  enableVirtuals = true
) => {
  SchemaModel.set(typeConvert, {
    transform: (document, returnObject) => {
      delete returnObject._id
      return returnObject
    },
    virtuals: enableVirtuals
  })
}



Exception group is missing
MongooseServerSelectionError: getaddrinfo ENOTFOUND mongodb.safra-data
    at _handleConnectionErrors (h:\Documents\fee-management-backend\node_modules\mongoose\lib\connection.js:755:11)
    at NativeConnection.openUri (h:\Documents\fee-management-backend\node_modules\mongoose\lib\connection.js:730:11)
    at processTicksAndRejections (h:\Documents\fee-management-backend\lib\internal\process\task_queues.js:95:5)
    at runNextTicks (h:\Documents\fee-management-backend\lib\internal\process\task_queues.js:64:3)
    at listOnTimeout (h:\Documents\fee-management-backend\lib\internal\timers.js:540:9)
    at process.processTimers (node:internal/timers:514:7) {message: 'getaddrinfo ENOTFOUND mongodb.safra-data', reason: TopologyDescription, code: undefined, stack: 'MongooseServerSelectionError: getaddrinfo ENOâ€¦ss.processTimers (node:internal/timers:514:7)'}
Unhandled Promise Rejection: err:  Operation `Field.find()` buffering timed out after 10000ms
apiServer.js:148
MongooseError: Operation `Field.find()` buffering timed out after 10000ms
    at Timeout.<anonymous> (H:\Documents\fee-management-backend\node_modules\mongoose\lib\drivers\node-mongodb-native\collection.js:185:23)
    at listOnTimeout (node:internal/timers:573:17)
    at process.processTimers (node:internal/timers:514:7)
