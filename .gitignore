// feeTypes que queremos
const feeTypesToReturn = ["Customer Fees", "Bank Account Fees", "Investment Account Fees"];

// Faça o "group by feeType" de sempre
const groupedFees = feeTypesToReturn.map(type => {
  // Filtra todos que tenham `feeType === type`
  const itemsOfThisType = allFees.filter(item => item.feeType === type);

  // Junta todos os feeGroups em um só array
  const combinedFeeGroups = itemsOfThisType.flatMap(item => item.feeGroups);

  // Agora, CRIAR UM MAPA para mesclar grupos com mesma
  // name/accountNumber/cif/kycMailingStatus
  const mapOfGroups = {};

  for (const group of combinedFeeGroups) {
    // Monta uma chave que represente esse grupo
    // (ajuste conforme sua necessidade se você quiser só agrupar por "name")
    const key = [
      group.name,
      group.accountNumber,
      group.cif,
      group.kycMailingStatus
    ].join("||");

    // Se não existe, inicializa
    if (!mapOfGroups[key]) {
      mapOfGroups[key] = {
        name: group.name ?? "",
        accountNumber: group.accountNumber ?? "",
        cif: group.cif ?? "",
        kycMailingStatus: group.kycMailingStatus ?? "",
        fields: []
      };
    }

    // Adiciona todos os fields
    mapOfGroups[key].fields.push(...group.fields);
  }

  // Agora convertemos o objeto em array
  const mergedFeeGroups = Object.values(mapOfGroups);

  return {
    feeType: type,
    feeGroups: mergedFeeGroups
  };
});
