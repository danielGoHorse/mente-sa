import { create } from 'zustand';

export interface DocumentUploaded {
  serverPath: string;                           // obrigatório
  documentName: string;                         // obrigatório
  documentUUID: string;                         // obrigatório
  createdAt: string;                            // ISO string
  uploadedBy: { fullName?: string; userId?: string };

  // opcionais
  documentSize?: number;
  documentStatus?: string;
  documentURL?: string;         // blob local
  documentURLPreview?: string;  // blob local
  serverUrlSigned?: string;     // URL assinada
  itemRef?: string;
}

export interface FeeDocuments {
  documentList: DocumentUploaded[];
  setDocumentList: (documentList: DocumentUploaded[]) => void;
  clearDocumentList: () => void;
}

export const useDocumentStore = create<FeeDocuments>((set) => ({
  documentList: [],
  setDocumentList: (docs) => {
    const withoutSpaces = docs.map((doc) => ({
      ...doc,
      documentName: doc.documentName.replace(/\s/g, '_'),
    }));
    set({ documentList: withoutSpaces });
  },
  clearDocumentList: () => set({ documentList: [] }),
}));
