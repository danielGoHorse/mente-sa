function mergeEquityOptionAll(excRows) {
  // Filtra apenas os que têm Amount e FreqDescription válidos
  const equities = excRows.filter(r => r.FeeCode === "BPS004" && r.Amount && r.FreqDescription);
  const options  = excRows.filter(r => r.FeeCode === "BPS005" && r.Amount && r.FreqDescription);
  const allCodes = Array.from(new Set([...equities, ...options].map(r => r.Amount)));
  
  const result = allCodes.sort().map(code => {
    const equity = equities.find(r => r.Amount === code);
    const option = options .find(r => r.Amount === code);
    return {
      value: code,
      text:
        `${code} - ` +
        `Equity:${equity && equity.FreqDescription ? equity.FreqDescription.trim() : '-'}` +
        `; Option:${option && option.FreqDescription ? option.FreqDescription.trim() : '-'}`,
      visible: true,
      retired: false,
    };
  });

  // Adiciona a opção Other ao final
  result.push({
    value: "",
    text: "Other",
    visible: true,
    retired: false,
  });

  return result;
}



if (field.code === 6) {
  field.exceptionOptions = rows
    .filter(r => !!r.Amount && !!r.FreqDescription) // Só quem tem ambos!
    .map(r => ({
      value: r.Amount,
      text: `${r.Amount} - ${r.FreqDescription?.trim()}`,
      visible: true,
      retired: false,
    }));
  field.defaultValue = '';
  field.labelValue = '';
  return;
}
