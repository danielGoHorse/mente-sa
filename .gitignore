async execute({ customerAccount }) {
  global.logger.info(`FeeGetByCifUseCase() - CIF: ${customerAccount[0].cifno}`);

  const result = { fees: [] };
  const cif = customerAccount[0].cifno;

  // Buscar dados do SQL
  const standardFees = await this.#getFeeStandardFromSQL(cif);
  const exceptionFees = await this.#getFeeExceptionFromSQL(cif);
  const fees = [...standardFees, ...exceptionFees];

  const customer = new CustomerFees(fees, customerAccount);
  if (customer.fee) result.fees.push(customer.fee);
  
  const bank = new BankAccountFee(fees, customerAccount);
  if (bank.fee) result.fees.push(bank.fee);

  const equityField = await Field.find({ code: 7 });
  const investiment = new InvestimentAccountFee(fees, customerAccount, equityField[0]);
  if (investiment.fee?.feeGroups) result.fees.push(investiment.fee);

  const feesActives = await FeeCase.find({
    cif: cif,
    status: { $nin: ['DONE', 'REJECTED'] },
    caseNumber: { $exists: true },
  });

  result.feesActives = feesActives?.map((x) => ({
    caseNumber: x.caseNumber,
    id: x.id,
  }));

  result.documentUrl = 'https://minio-ui.dev.k8s.safra.int/api/v1/buckets/jarvis-public/objects/download?preview=true&prefix=U2NoZWR1bGVPZkZlZXMucGRm';

  return Result.ok(result);
}
