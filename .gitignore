{
    "code": 200,
    "data": [
        {
            "id": 1,
            "description": "PB International",
            "type": "I",
            "coverage": "I"
        },
        {
            "id": 2,
            "description": "Domestic Individual",
            "type": "I",
            "coverage": "D"
        },
        {
            "id": 3,
            "description": "Domestic Corporation",
            "type": "C",
            "coverage": "D"
        },
        {
            "id": 4,
            "description": "EFRA",
            "type": "I",
            "coverage": "I"
        },
        {
            "id": 5,
            "description": "ERA",
            "type": "I",
            "coverage": "I"
        }
    ]
}

import ApiResponse from '#core/http/apiResponse.js';

export default async function feeScheduleGetEndpoint(req, res) {
  try {
    const { type } = req.params;

    const scheduleUrls = global.environment.scheduleUrls;

    if (!scheduleUrls || !scheduleUrls[type]) {
      const badRequestResponse = ApiResponse.createBadRequestResponse({ error: 'Invalid schedule type or configuration missing' });
      return res.status(badRequestResponse.code).json(badRequestResponse.data);
    }

    const url = scheduleUrls[type];

    const okResponse = ApiResponse.createOkResponse({ url });
    return res.status(okResponse.code).json(okResponse.data);

  } catch (error) {
    global.logger.error('Error in feeScheduleGetEndpoint:', error.message);
    return res.status(500).json({ error: 'Internal Server Error' });
  }
}

  scheduleUrls: {
    intlPB3:'',
    uSPBIndividual3:'',
    uSPBCorporation3:'',
    eraPB3:'',
    efraPB3:''
  }
