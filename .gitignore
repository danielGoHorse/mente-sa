// ========== Função Auxiliar: Junta todas as opções Equity/Option do banco ==========
function mergeEquityOptionAll(excRows) {
  const equities = excRows.filter(r => r.FeeCode === "BPS004");
  const options  = excRows.filter(r => r.FeeCode === "BPS005");
  const allCodes = Array.from(
    new Set([...equities, ...options].map(r => r.Amount))
  );
  return allCodes.sort().map(code => {
    const equity = equities.find(r => r.Amount === code);
    const option = options .find(r => r.Amount === code);
    return {
      value: code,
      text:
        `${code} - ` +
        `Equity:${equity && equity.FreqDescription ? equity.FreqDescription.trim() : '-'}` +
        `; Option:${option && option.FreqDescription ? option.FreqDescription.trim() : '-'}`,
      visible: true,
      retired: false,
    };
  });
}

// ========== Aplica opções nas Exception Requests do campo 7 (Equity/Option) ==========
function applyEquityOptionException(field, excRows) {
  if (field.code === 7) {
    field.exceptionOptions = mergeEquityOptionAll(excRows);
    field.defaultValue = '';
    field.labelValue = '';
  }
}

// ========== Aplica labelValue no Standard/Current Fees do campo 7 (Equity/Option) ==========
function setEquityOptionLabelValue(field, excRows) {
  if (field && field.code === 7 && field.defaultValue) {
    const code = field.defaultValue;
    const equities = excRows.filter(r => r.FeeCode === "BPS004");
    const options  = excRows.filter(r => r.FeeCode === "BPS005");
    const equity = equities.find(r => r.Amount === code);
    const option = options .find(r => r.Amount === code);
    field.labelValue =
      `${code} - ` +
      `Equity:${equity && equity.FreqDescription ? equity.FreqDescription.trim() : '-'}` +
      `; Option:${option && option.FreqDescription ? option.FreqDescription.trim() : '-'}`;
  }
}

// ================== PROCESSO PRINCIPAL: Ajusta todo o array fees ==================
function updateFeesWithEquityOptionData(fees, excRows) {
  fees.forEach(fee => {
    // Atualiza Exception Request: todas opções Equity/Option possíveis
    const excGrp = fee.feeGroups?.find(g => g.name === 'Exception Request');
    if (excGrp) {
      excGrp.fields.forEach(field => applyEquityOptionException(field, excRows));
    }
    // Atualiza o labelValue de Standard/Current Fees, campo 7, para o texto completo (Equity+Option)
    ['Standard Fees', 'Client Current Fees'].forEach(groupName => {
      const group = fee.feeGroups?.find(g => g.name === groupName);
      if (group) {
        group.fields.forEach(field => setEquityOptionLabelValue(field, excRows));
      }
    });
  });
}

// ========== USO ==========
/*
  fees: seu array principal vindo do banco/processamento, 
        já no formato esperado pelo frontend (com feeGroups, fields, etc)
  excRows: array de todas as linhas de Equity/Option da tabela (FeeCode = BPS004 ou BPS005)
*/

// Chame essa função após montar/popular seu array 'fees':
updateFeesWithEquityOptionData(fees, excRows);

// Agora o array 'fees' está pronto para ir para o frontend!
