import { configureSchemaMongoToReturnId } from '#src/core/data/mongoSchemaBase.js'
import mongoose, { Schema } from 'mongoose'

export const FieldSchema = new Schema(
  {
    code: {
      type: Number,
      required: true,
      enum: [1, 2, 3, 4, 5, 6, 7]
    },
    isStandard: {
      type: Boolean,
      required: true,
      default: false
    },
    isCurrentClient: {
      type: Boolean,
      required: true,
      default: false
    },
    isException: {
      type: Boolean,
      required: true,
      default: false
    },
    name: {
      type: String,
      required: true
    },
    defaultValue: {
      type: String,
      required: false
    },
    labelValue: {
      type: String,
      required: false
    },
    hasChanged: {
      type: Boolean,
      default: false
    },
    approved: {
      type: Boolean,
      required: false
    },
    reject: {
      type: Boolean,
      required: false
    },
    rejectComment: {
      type: String,
      required: false
    },
    tooltip: {
      type: String,
      required: false
    },
    exceptionOptions: [
      {
        value: String,
        text: String,

        retired: {
          type: Boolean,
          required: false,
          default: false
        },
        visible: {
          type: Boolean,
          required: false,
          default: true
        },
        approvedByDoubleA: {
          type: Boolean,
          required: false,
          default: null
        }
      }
    ],
    results: {
      type: Map,
      of: String,
      required: false
    }
  },
  {
    collection: 'Field',
    timestamps: true
  }
)
configureSchemaMongoToReturnId('toObject', FieldSchema)

export const Field = mongoose.model('Fields', FieldSchema)
