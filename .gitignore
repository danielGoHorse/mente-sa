async #getFeesStructuredFromSQL(customerAccount) {
    // Obter os dados do SQL
    const feesData = await this.#getFeesFromSQL(customerAccount[0].cifno);
    
    // Estruturar os dados agrupados
    const groupedFees = {};

    for (const fee of feesData) {
        const { FeeType, FeeDescription, FeeCode, FeeAmount, Frequency } = fee;

        // Criar feeType se ainda não existir
        if (!groupedFees[FeeType]) {
            groupedFees[FeeType] = {
                feeType: FeeType,
                feeGroups: [{
                    name: "Standard Fees",
                    code: 1, // Código fixo para agrupar como "Standard Fees"
                    fields: []
                }]
            };
        }

        // Adicionar campo ao grupo de fees
        groupedFees[FeeType].feeGroups[0].fields.push({
            code: FeeCode,
            name: FeeDescription,
            defaultValue: FeeAmount ? FeeAmount.toString() : "",
            tooltip: Frequency ? `Charged: ${Frequency}` : "",
            isException: false
        });
    }
    
    return Object.values(groupedFees);
}
