STD‑rows 4
EXC‑rows 16

Blz Chat, agora sim....

Vamos aos proximos passos....Vamos focar primeiro no Standard

o customerAccount

tras

Process exited with code 1
C:\Program Files\nodejs\node.exe .\src\app\api\index.js

0: {cifno: 'NAA0010', ddaNumber: 17226444, bpsAcctNumber: '', feeType: 1, feeDescription: 'AccountMaintenance', …}
bpsAcctNumber: ''
bpsFeeTypeCode: ''
cifno: 'NAA0010'
ddaNumber: 17226444
entity: 'SNB/284'
feeAmount: 1200
feeCode: 'JH001'
feeDescription: 'AccountMaintenance'
feeGroup: 1
feeType: 1
isFeesStandard: 'Yes'
kycMailingStatus: null
source: 'JHA'
[[Prototype]]: Object
1: {cifno: 'NAA0010', ddaNumber: 17226444, bpsAcctNumber: '', feeType: 2, feeDescription: 'HoldMail', …}
bpsAcctNumber: ''
bpsFeeTypeCode: ''
cifno: 'NAA0010'
ddaNumber: 17226444
entity: 'SNB/284'
feeAmount: 600
feeCode: 'JH002'
feeDescription: 'HoldMail'
feeGroup: 1
feeType: 2
isFeesStandard: 'Yes'
kycMailingStatus: 'Hold Mail'
source: 'JHA'
[[Prototype]]: Object
2: {cifno: 'NAA0010', ddaNumber: 17226444, bpsAcctNumber: '', feeType: 3, feeDescription: 'USD/FXIncomingWire', …}
bpsAcctNumber: ''
bpsFeeTypeCode: ''
cifno: 'NAA0010'
ddaNumber: 17226444
entity: 'SNB/284'
feeAmount: 0
feeCode: 'JH010'
feeDescription: 'USD/FXIncomingWire'
feeGroup: 2
feeType: 3
isFeesStandard: 'Yes'
kycMailingStatus: null
source: 'JHA'
[[Prototype]]: Object
3: {cifno: 'NAA0010', ddaNumber: 17226444, bpsAcctNumber: '', feeType: 4, feeDescription: 'USD/FXOutgoingWire', …}
bpsAcctNumber: ''
bpsFeeTypeCode: ''
cifno: 'NAA0010'
ddaNumber: 17226444
entity: 'SNB/284'
feeAmount: 75
feeCode: 'JH008'
feeDescription: 'USD/FXOutgoingWire'
feeGroup: 2
feeType: 4
isFeesStandard: 'Yes'
kycMailingStatus: null
source: 'JHA'
[[Prototype]]: Object
4: {cifno: 'NAA0010', ddaNumber: 17226444, bpsAcctNumber: '20002089', feeType: 6, feeDescription: 'SafekeepingCustody', …}
bpsAcctNumber: '20002089'
bpsFeeTypeCode: 'C'
cifno: 'NAA0010'
ddaNumber: 17226444
entity: 'SNB/284'
feeAmount: 375
feeCode: 'A053'
feeDescription: 'SafekeepingCustody'
feeGroup: 3
feeType: 6
isFeesStandard: 'Yes'
kycMailingStatus: null
source: 'BPS'
[[Prototype]]: Object
length: 5
[[Prototype]]: Array(0)
[[Prototype]]: Object

E nós ja conseguimos utilizar os valores feeAmount baseados no feeGroup e feeType

Agora com as informações do standard e da exception passando o feePackageId, vc tras os dados assim no Standard:

FeePackageDescription	FeeAmount	IsStandard	FeeShortDescription	FeeType	FeeDescription
PB International	1200.00	1	AccountMaintenance	1	AccountMaintenance
PB International	600.00	1	HoldMail	2	HoldMail
PB International	75.00	1	USD/FXOutgoingWire	4	USD/FXOutgoingWire
PB International	0.00	1	USD/FXIncomingWire	3	USD/FXIncomingWire

Nesse ex eu usei um id 1...e ele trouxe o PB International

Quando eu chamo o feebycif que nós pegamos o id ele esta na tabela assim:

CustomerName	CustomerShortName	CustomerAddress	CIFNO	ACCTNO	EntityType	FeeDescription	FeeShortDescription	FeeCode	Istransactional	FeeType	FeeAmount	Frequency	Branch City	Branch State	Branch Type	OfficerId	Officer	StandardException	Default Fee Package Id	Default Fee Package	Default Package Type	Default Fee Amount	Default Frequency
OOO OOOOOOO O.O.                        	OOO OOOOOOO O.O.    	OOOOOOO 111-OOO 111                      OOOOOOOOOO OOOOOOO  11111               	NAA0010	17226444	NULL	Account Maintenance Fee	AccountMaintenance	JH001	0	Client Fees	1200.00	Annual - Charged Semi-Annual	New York	NY	International	571   	Marcelo Fontanelli       BR 30	Standard	1	PB International	Individual	1200.00	Annual - Charged Semi-Annual


Qual é a ideia

Baseado nesse de para:

FeePackageId	FeePackageDescription
1	PB International
2	Domestic Individual
3	Domestic Corporation
4	EFRA
5	ERA

Precisamos garantir que os valores sejam utilizados dessa procedure nova do standard cruzando os dados de feeType, FeeGroup, Package...

Sera que deu pra entender? pois é o mesmo que fazemos mas com os dados que ja vem do customer account




