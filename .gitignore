#buildCustomerAccounts(feesData) {
  const accounts = feesData.map(fee => ({
    cifno: fee.CIFNO,
    ddaNumber: fee.ACCTNO,
    feeType: this.#mapFeeType(fee.FeeType),
    feeGroup: fee.FeeGroup || 1, // Ajuste isso caso FeeGroup esteja em outro lugar
    kycMailingStatus: fee.StandardException === "Standard" ? "Standard" : "Hold Mail"
  }));

  return accounts;
}

// Função auxiliar para mapear o FeeType
#mapFeeType(feeType) {
  switch (feeType) {
    case "Customer Fees":
      return 1;
    case "Bank Account Fees":
      return 2;
    case "Investment Account Fees":
      return 3;
    default:
      return 0;
  }
}



const feesData = await this.#getFeesFromSQL(customerAccount[0].cifno);

// Construir o formato correto de customerAccount
const accounts = this.#buildCustomerAccounts(feesData);

// Passar `accounts` no lugar de `customerAccount`
const customer = new CustomerFees(fees, accounts);
if (customer.fee) result.fees.push(customer.fee);

