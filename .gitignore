import {
  connectToFeeMgmtDb,
  executeStoreProcedure
} from '#core/data/mssql/index.js';

async function debugPackages(cifno) {
  /* ------------------------------------------------------------------ */
  const conn = await connectToFeeMgmtDb();         //  ➜ 1 pool apenas
  try {
    /* 1) linhas “correntes” que já vêm no customerAccount -------------- */
    const currentRows =
      await executeStoreProcedure(conn, 'sp_GetConductorFees', { CIF: cifno });
    console.log('=== CURRENT  (sp_GetConductorFees) =================');
    console.dir(currentRows, { depth: null });

    /* 2) primeiro pegamos o packageId pela mesma proc usada no código -- */
    const [{ 'Default Fee Package Id': pkgId } = {}] =
      await executeStoreProcedure(conn, 'sp_get_fees_byCIF', { cifno });

    if (!pkgId) {
      console.warn(`⚠️  Nenhum FeePackageId para o CIF ${cifno}`);
      return;
    }
    console.log(`\n>> FeePackageId encontrado: ${pkgId}\n`);

    /* 3) STANDARD fees do pacote -------------------------------------- */
    const standardRows =
      await executeStoreProcedure(
        conn,
        'sp_get_standard_fees_bypackage',
        { FeePackageId: pkgId }   // ou { packageId: pkgId } se o nome mudar
      );
    console.log('=== STANDARD (sp_get_standard_fees_bypackage) =======');
    console.dir(standardRows, { depth: null });

    /* 4) EXCEPTION fees do mesmo pacote -------------------------------- */
    const exceptionRows =
      await executeStoreProcedure(
        conn,
        'sp_get_exception_fees_bypackage',
        { FeePackageId: pkgId }
      );
    console.log('=== EXCEPTIONS (sp_get_exception_fees_bypackage) ==== ');
    console.dir(exceptionRows, { depth: null });

  } finally {
    /* fecha a conexão pra não estourar “Global connection already exists” */
    await conn.close();
  }
}

/* ---- chame passando o CIF desejado ----------------------------------- */
debugPackages('NAA0010')
  .catch(err => console.error('Erro nos testes de package:', err));
