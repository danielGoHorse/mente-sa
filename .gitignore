async #getFeeExceptionFromSQL(cif) {
  global.logger.info(`getFeeExceptionFromSQL() - CIF: ${cif}`);

  if (!cif) {
    throw new Error('CIF is required to fetch exception fees');
  }

  const connection = await connectToFeeMgmtDb();
  const recordset = await executeStoreProcedure(connection, 'sp_get_fees_byCIF', { cifno: cif });

  if (!recordset || recordset.length === 0) {
    global.logger.warn(`No exception fees found for CIF: ${cif}`);
    return [];
  }

  const feeResult = recordset.map((record) => ({
    feeType: record.feeType,
    feeGroups: [
      {
        name: record.feeGroup,
        code: record.groupCode,
        fields: [
          {
            code: record.fieldCode,
            name: record.fieldName,
            defaultValue: record.defaultValue,
            isException: record.isException === 1,
            exceptionOptions: record.exceptionOptions ? JSON.parse(record.exceptionOptions) : [],
          },
        ],
      },
    ],
  }));

  return feeResult;
}
