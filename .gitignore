import { HistoryData } from "../store/types";


type RawHistory = {
  status?: string;
  data?: any[][];
  workflow?: any[][];
  cardRowData?: any[];
  dataDisplayData?: any[];
  selectedBank?: string;
};


export function parseHistoryToData(history: RawHistory): HistoryData {
  if (!history || !Array.isArray(history.data)) {
    return {
      status: history?.status ?? "",
      data: [],
      cardRowData: [],
      dataDisplayData: [],
      selectedBank: "",
      approvalsSteps: [],
    };
  }
  const approvalsSteps = (history.data.flat()).filter(
    (s) => s.name && s.name.startsWith("Approvals and Restrictions")
  );

  const normalSteps = (history.data.flat()).filter(
    (s) => !(s.name && s.name.startsWith("Approvals and Restrictions"))
  );

  const timelineSteps = [];

  const initiatorStep = normalSteps.find((s) =>
    s.name?.toLowerCase().includes("initiator")
  );
  if (initiatorStep) timelineSteps.push(initiatorStep);

  const validationStep = normalSteps.find((s) =>
    s.name?.toLowerCase().includes("validation")
  );
  if (validationStep) timelineSteps.push({
    ...validationStep,
    name: "Validations",
  });

  if (approvalsSteps.length > 0) {
    const groupStatus =
      approvalsSteps.find((s) => s.status === "pending")?.status ||
      approvalsSteps[0].status ||
      "pending";
    timelineSteps.push({
      id: 999,
      name: "Approvals and Restrictions",
      status: groupStatus,
    });
  }

  const restrictionRemovalStep = normalSteps.find((s) =>
    s.name?.toLowerCase().includes("restriction removal")
  );
  if (restrictionRemovalStep) timelineSteps.push(restrictionRemovalStep);

  const wireRepairStep = normalSteps.find((s) =>
    s.name?.toLowerCase().includes("wire repair")
  );
  if (wireRepairStep) timelineSteps.push(wireRepairStep);

  const ofacStep = normalSteps.find((s) =>
    s.name?.toLowerCase().includes("ofac")
  );
  if (ofacStep) timelineSteps.push(ofacStep);


  // Finaliza
  return {
    status: history.status ?? "",
    data: timelineSteps.map((step) => [step]), 
    cardRowData: history.cardRowData ?? [],
    dataDisplayData: history.dataDisplayData ?? [],
    selectedBank: history.selectedBank ?? "",
    approvalsSteps, 
  };
}

