import { HistoryData } from "@/app/store/types";

/**
 * Converte a resposta da API (Wire Request) para o formato
 * que o componente <History> entende.
 */
export function toHistoryData(api: any): HistoryData {
  return {
    status: api.caseStatus,                         // "pending"
    data: api.workflow ?? [],                       // passos completos
    timeLine: api.timeline ?? [],                   // linha do tempo simplificada
    cardRowData: api.workflowApprovers ?? [],       // cards no topo
    dataDisplayData: (api.actions ?? []).map((a: any) => ({
      Id: a.stepName,
      Status: `${a.type}${a.subtype ? `: ${a.subtype}` : ""}`,
      Date: a.date,
    })),
    selectedBank: api.beneficiaryBankName?.content ?? "",
  };
}






import { toHistoryData } from "@/app/utils/toHistoryData";

export default function PageTabs({ params, tabTriggerType }: IPageTabsParams) {
  /* ...seu código... */
  const { isLoading, isFetching, data: apiData } = getRequestConfig;

  /* quando chegar a resposta, converta */
  const historyData = apiData ? toHistoryData(apiData) : null;

  if (!historyData) return null;        // loading / skeleton aqui, se quiser

  return (
    <Tabs /* ... */>
      {/* --- aba Request (sem mudanças) --- */}

      {/* --- aba Documents (sem mudanças) --- */}

      {/* --- aba History --- */}
      <TabsContent
        value="history"
        className="mt-0 rounded-b-lg rounded-r-lg bg-white p-6"
      >
        <History
          /* mapeamento correto */
          status={historyData.status}
          data={historyData.data}
          timeLine={historyData.timeLine}      {/* <- adicionado */}
          cardRowData={historyData.cardRowData}
          dataDisplayData={historyData.dataDisplayData}
          selectedBank={historyData.selectedBank}
        />
      </TabsContent>
    </Tabs>
  );
}







