<TimelineScrollWrapper>
  {data
    .flatMap((subArray, subArrayIndex) =>
      subArray.map((item, itemIndex) => ({
        ...item,
        isFromMultiple: subArray.length > 1,
        subArrayIndex,
        key: `${subArrayIndex}-${itemIndex}`,
        originalStatus: item.status as workflowStatus,
      }))
    )
    .map((item: any, idx, flat) => {
      const isLast = idx === flat.length - 1;
      const next = flat[idx + 1];
      const statusValue = timeLine
        ? timeLineMap[idx].status
        : item.originalStatus;
      const hasExtra =
        !isLast &&
        item.isFromMultiple &&
        next?.isFromMultiple &&
        item.subArrayIndex === next.subArrayIndex;

      return (
        <Fragment key={item.key}>
          <Timeline.Step progress={!isLast} status={statusValue}>
            <div className="relative flex flex-col items-center justify-center  overflow-visible min-h-[180px]">
              {hasExtra && (
                <span className="absolute top-[-3px] left-1/2 transform -translate-x-1/2">
                  <Timeline.Link
                    status={next?.originalStatus}
                    hoverContent={
                      <div className="text-xs  z-10">
                        <div>
                          <strong>Name:</strong> {item.name}
                        </div>
                        <div>
                          <strong>Status:</strong> {item.originalStatus}
                        </div>
                        <div>
                          <strong>Group:</strong> {item.subArrayIndex}
                        </div>
                      </div>
                    }
                  />
                </span>
              )}
              <Timeline.Circle status={statusValue} />
              <Timeline.Text>{item.name}</Timeline.Text>

              {/* --- ADICIONE O BLOCO ABAIXO! --- */}
              {item.name === "Approvals and Restrictions" && item.internalSteps && (
                <Timeline.Link
                  status={item.status}
                  hoverContent={
                    <TimelinePopover steps={item.internalSteps} />
                  }
                />
              )}
              {/* --- FIM DO BLOCO --- */}
            </div>
          </Timeline.Step>
        </Fragment>
      );
    })}
</TimelineScrollWrapper>
