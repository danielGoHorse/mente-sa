<div className="flex flex-col gap-4">
  <div className="text-[#484A55] font-figtree text-base font-semibold leading-[24px] tracking-[0.12px] text-left">
    Timeline
  </div>

  {/* SCROLL WRAPPER */}
  <div className="overflow-x-auto max-w-full">
    <div className="min-w-fit flex gap-6 pr-6">
      <Timeline.Root>
        {data
          .flatMap((subArray, subArrayIndex) =>
            subArray.map((item, itemIndex) => ({
              ...item,
              isFromMultiple: subArray.length > 1,
              subArrayIndex,
              key: `${subArrayIndex}-${itemIndex}`,
              originalStatus: item.status as workflowStatus,
            }))
          )
          .map((item: any, idx, flat) => {
            const isLast = idx === flat.length - 1;
            const next = flat[idx + 1];
            const statusValue = timeLine
              ? timeLineMap[idx].status
              : item.originalStatus;
            const hasExtra =
              !isLast &&
              item.isFromMultiple &&
              next?.isFromMultiple &&
              item.subArrayIndex === next.subArrayIndex;

            return (
              <Fragment key={item.key}>
                <Timeline.Step progress={!isLast} status={statusValue}>
                  <div className="relative flex flex-col items-center">
                    {hasExtra && (
                      <span className="absolute top-[-24px] left-1/2 transform -translate-x-1/2">
                        <Timeline.Link
                          status={next?.originalStatus}
                          hoverContent={
                            <div className="text-xs">
                              <div>
                                <strong>Name:</strong> {item.name}
                              </div>
                              <div>
                                <strong>Status:</strong> {item.originalStatus}
                              </div>
                              <div>
                                <strong>Group:</strong> {item.subArrayIndex}
                              </div>
                            </div>
                          }
                        />
                      </span>
                    )}
                    <Timeline.Circle status={statusValue} />
                    <Timeline.Text>{item.name}</Timeline.Text>
                  </div>
                </Timeline.Step>
              </Fragment>
            );
          })}
      </Timeline.Root>
    </div>
  </div>
</div>
