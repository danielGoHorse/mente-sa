async #getFeesStructuredFromSQL(customerAccount) {
    const feesData = await this.#getFeesFromSQL(customerAccount[0].cifno);
    
    console.log("Fees Data Received:", feesData); // <-- Verificar antes da estruturação
    
    if (!feesData.length) {
        console.log("Nenhuma taxa encontrada para o cliente.");
        return [];
    }
    
    const groupedFees = {};

    for (const fee of feesData) {
        console.log("Processing Fee:", fee); // <-- Verificar cada iteração

        const { FeeType, FeeDescription, FeeCode, FeeAmount, Frequency } = fee;

        if (!groupedFees[FeeType]) {
            groupedFees[FeeType] = {
                feeType: FeeType,
                feeGroups: [{
                    name: "Standard Fees",
                    code: 1,
                    fields: []
                }]
            };
        }

        groupedFees[FeeType].feeGroups[0].fields.push({
            code: FeeCode,
            name: FeeDescription,
            defaultValue: FeeAmount ? FeeAmount.toString() : "",
            tooltip: Frequency ? `Charged: ${Frequency}` : "",
            isException: false
        });
    }

    console.log("Structured Fees:", Object.values(groupedFees)); // <-- Verificar estrutura final
    
    return Object.values(groupedFees);
}
